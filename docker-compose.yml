# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app{{#fluent}}{{^db.is_sqlite}}
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate{{/db.is_sqlite}}{{/fluent}}
#       Stop all: docker-compose down{{#fluent}}{{^db.is_sqlite}} (add -v to wipe db){{/db.is_sqlite}}{{/fluent}}
#
version: '3.7'

#x-shared_environment: &shared_environment
#  LOG_LEVEL: ${LOG_LEVEL:-debug}{{#fluent}}{{^db.is_sqlite}}{{^db.is_mongo}}
#  DATABASE_HOST: db
#  DATABASE_NAME: vapor_database
#  DATABASE_USERNAME: vapor_username
#  DATABASE_PASSWORD: vapor_password{{/db.is_mongo}}{{/db.is_sqlite}}{{#db.is_mongo}}
#  DATABASE_URL: mongodb://db:27017/vapor_database{{/db.is_mongo}}{{/fluent}}
  
services:
  php73:
    image: vphat28/php73
    build: ./docker-files/php73
    volumes:
      - ./www:/var/www/html
    depends_on:
      - mysql
  nginx:
    image: nginx
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
      - ./www:/var/www/html
    depends_on:
      - php73
    ports:
      - '80:80'
  mysql:
    image: mysql:5.7
    volumes:
      - ./mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      
      
 
